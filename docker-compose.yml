services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ordering_vue_app_app
    restart: unless-stopped
    working_dir: /var/www/ordering_vue_app
    volumes:
      - ./ordering_vue_app:/var/www/ordering_vue_app
    networks:
      - laravel
    depends_on:
      - db

  webserver:
    image: nginx:latest
    container_name: ordering_vue_app_webserver
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./ordering_vue_app:/var/www/ordering_vue_app
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app
    networks:
      - laravel

  db:
    image: mysql:8.0
    container_name: ordering_vue_app_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: ordering_vue_app
      MYSQL_USER: laravel
      MYSQL_PASSWORD: password
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - laravel

  phpmyadmin:
    image: lscr.io/linuxserver/phpmyadmin:latest
    container_name: ordering_vue_app_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_USER: laravel
      PMA_PASSWORD: password
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - laravel

  node:
    image: node:16
    container_name: ordering_vue_app_node
    working_dir: /var/www/ordering_vue_app
    volumes:
      - ./ordering_vue_app:/var/www/ordering_vue_app
    networks:
      - laravel
    command: tail -f /dev/null

networks:
  laravel:
    driver: bridge

volumes:
  dbdata:
